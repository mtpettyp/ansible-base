- name: Check if ohmyzsh directory exists
  stat:
    path: "$HOME/.oh-my-zsh"
  become: yes
  become_user: "{{ user.name }}"
  register: ohmyzsh_dir

- name: Install ohmyzsh
  git:
    repo: "https://github.com/robbyrussell/oh-my-zsh.git"
    dest: "$HOME/.oh-my-zsh"
    depth: 1
    version: master
  become: yes
  become_user: "{{ user.name }}"
  when: user.shell == '/bin/zsh' and not ohmyzsh_dir.stat.exists

- name: Install homeshick
  git:
    repo: "https://github.com/andsens/homeshick.git"
    dest: "$HOME/.homesick/repos/homeshick"
    version: master
  become: yes
  become_user: "{{ user.name }}"
  when: user.dotfiles is defined and user.dotfiles

- name: Check if dotfiles directory exists
  stat:
    path: "$HOME/.homesick/repos/dotfiles"
  become: yes
  become_user: "{{ user.name }}"
  register: dotfiles_dir

- name: Install dotfiles
  shell: |
    set -euo pipefail
    echo "y y" | $HOME/.homesick/repos/homeshick/bin/homeshick clone {{ item.dotfiles }}
  args:
    executable: /bin/bash
  become: yes
  become_user: "{{ user.name }}"
  when: item.dotfiles is defined and user.dotfiles and not dotfiles_dir.stat.exists

- name: Set authorized keys
  authorized_key:
    user: "{{ user.name }}"
    state: present
    key: "{{ user.key_url }}"
  when: user.key_url is defined